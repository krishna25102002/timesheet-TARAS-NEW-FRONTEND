{"ast":null,"code":"import { isHoliday } from \"./holidayUtils\";\nexport const generateWeeks = year => {\n  const weeks = [];\n  const startDate = new Date(year, 0, 1);\n  const endDate = new Date(year, 11, 31);\n\n  // Adjust start date to first Monday if necessary\n  while (startDate.getDay() !== 1) {\n    startDate.setDate(startDate.getDate() + 1);\n  }\n  let currentDate = new Date(startDate);\n  let weekNumber = 1;\n  while (currentDate <= endDate) {\n    const weekStart = new Date(currentDate);\n    const weekEnd = new Date(currentDate);\n    weekEnd.setDate(weekEnd.getDate() + 4); // Add 4 days to get to Friday\n\n    const workDays = [];\n    let tempDate = new Date(weekStart);\n    for (let i = 0; i < 5; i++) {\n      const holiday = isHoliday(tempDate);\n      workDays.push({\n        day: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"][i],\n        date: new Date(tempDate),\n        isHoliday: !!holiday,\n        holidayName: holiday === null || holiday === void 0 ? void 0 : holiday.name\n      });\n      tempDate.setDate(tempDate.getDate() + 1);\n    }\n    const weekString = `Week ${String(weekNumber).padStart(2, \"0\")} (${weekStart.toLocaleDateString(\"en-GB\", {\n      day: \"2-digit\",\n      month: \"short\"\n    })} Mon - ${weekEnd.toLocaleDateString(\"en-GB\", {\n      day: \"2-digit\",\n      month: \"short\"\n    })} Fri)`;\n    weeks.push({\n      weekNumber,\n      weekString,\n      startDate: weekStart,\n      endDate: weekEnd,\n      workDays\n    });\n\n    // Move to next Monday\n    currentDate.setDate(currentDate.getDate() + 7);\n    weekNumber++;\n  }\n  return weeks;\n};","map":{"version":3,"names":["isHoliday","generateWeeks","year","weeks","startDate","Date","endDate","getDay","setDate","getDate","currentDate","weekNumber","weekStart","weekEnd","workDays","tempDate","i","holiday","push","day","date","holidayName","name","weekString","String","padStart","toLocaleDateString","month"],"sources":["C:/Users/kd1812/Desktop/tarastimesheetportal/src/utils/weekUtils.js"],"sourcesContent":["import { isHoliday } from \"./holidayUtils\";\r\n\r\nexport const generateWeeks = (year) => {\r\n  const weeks = [];\r\n  const startDate = new Date(year, 0, 1);\r\n  const endDate = new Date(year, 11, 31);\r\n\r\n  // Adjust start date to first Monday if necessary\r\n  while (startDate.getDay() !== 1) {\r\n    startDate.setDate(startDate.getDate() + 1);\r\n  }\r\n\r\n  let currentDate = new Date(startDate);\r\n  let weekNumber = 1;\r\n\r\n  while (currentDate <= endDate) {\r\n    const weekStart = new Date(currentDate);\r\n    const weekEnd = new Date(currentDate);\r\n    weekEnd.setDate(weekEnd.getDate() + 4); // Add 4 days to get to Friday\r\n\r\n    const workDays = [];\r\n    let tempDate = new Date(weekStart);\r\n\r\n    for (let i = 0; i < 5; i++) {\r\n      const holiday = isHoliday(tempDate);\r\n      workDays.push({\r\n        day: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"][i],\r\n        date: new Date(tempDate),\r\n        isHoliday: !!holiday,\r\n        holidayName: holiday?.name,\r\n      });\r\n      tempDate.setDate(tempDate.getDate() + 1);\r\n    }\r\n\r\n    const weekString = `Week ${String(weekNumber).padStart(\r\n      2,\r\n      \"0\"\r\n    )} (${weekStart.toLocaleDateString(\"en-GB\", {\r\n      day: \"2-digit\",\r\n      month: \"short\",\r\n    })} Mon - ${weekEnd.toLocaleDateString(\"en-GB\", {\r\n      day: \"2-digit\",\r\n      month: \"short\",\r\n    })} Fri)`;\r\n\r\n    weeks.push({\r\n      weekNumber,\r\n      weekString,\r\n      startDate: weekStart,\r\n      endDate: weekEnd,\r\n      workDays,\r\n    });\r\n\r\n    // Move to next Monday\r\n    currentDate.setDate(currentDate.getDate() + 7);\r\n    weekNumber++;\r\n  }\r\n\r\n  return weeks;\r\n};\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,gBAAgB;AAE1C,OAAO,MAAMC,aAAa,GAAIC,IAAI,IAAK;EACrC,MAAMC,KAAK,GAAG,EAAE;EAChB,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACH,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;EACtC,MAAMI,OAAO,GAAG,IAAID,IAAI,CAACH,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC;;EAEtC;EACA,OAAOE,SAAS,CAACG,MAAM,CAAC,CAAC,KAAK,CAAC,EAAE;IAC/BH,SAAS,CAACI,OAAO,CAACJ,SAAS,CAACK,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;EAC5C;EAEA,IAAIC,WAAW,GAAG,IAAIL,IAAI,CAACD,SAAS,CAAC;EACrC,IAAIO,UAAU,GAAG,CAAC;EAElB,OAAOD,WAAW,IAAIJ,OAAO,EAAE;IAC7B,MAAMM,SAAS,GAAG,IAAIP,IAAI,CAACK,WAAW,CAAC;IACvC,MAAMG,OAAO,GAAG,IAAIR,IAAI,CAACK,WAAW,CAAC;IACrCG,OAAO,CAACL,OAAO,CAACK,OAAO,CAACJ,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;IAExC,MAAMK,QAAQ,GAAG,EAAE;IACnB,IAAIC,QAAQ,GAAG,IAAIV,IAAI,CAACO,SAAS,CAAC;IAElC,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,MAAMC,OAAO,GAAGjB,SAAS,CAACe,QAAQ,CAAC;MACnCD,QAAQ,CAACI,IAAI,CAAC;QACZC,GAAG,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,CAAC,CAACH,CAAC,CAAC;QAChEI,IAAI,EAAE,IAAIf,IAAI,CAACU,QAAQ,CAAC;QACxBf,SAAS,EAAE,CAAC,CAACiB,OAAO;QACpBI,WAAW,EAAEJ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEK;MACxB,CAAC,CAAC;MACFP,QAAQ,CAACP,OAAO,CAACO,QAAQ,CAACN,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IAC1C;IAEA,MAAMc,UAAU,GAAG,QAAQC,MAAM,CAACb,UAAU,CAAC,CAACc,QAAQ,CACpD,CAAC,EACD,GACF,CAAC,KAAKb,SAAS,CAACc,kBAAkB,CAAC,OAAO,EAAE;MAC1CP,GAAG,EAAE,SAAS;MACdQ,KAAK,EAAE;IACT,CAAC,CAAC,UAAUd,OAAO,CAACa,kBAAkB,CAAC,OAAO,EAAE;MAC9CP,GAAG,EAAE,SAAS;MACdQ,KAAK,EAAE;IACT,CAAC,CAAC,OAAO;IAETxB,KAAK,CAACe,IAAI,CAAC;MACTP,UAAU;MACVY,UAAU;MACVnB,SAAS,EAAEQ,SAAS;MACpBN,OAAO,EAAEO,OAAO;MAChBC;IACF,CAAC,CAAC;;IAEF;IACAJ,WAAW,CAACF,OAAO,CAACE,WAAW,CAACD,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IAC9CE,UAAU,EAAE;EACd;EAEA,OAAOR,KAAK;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}