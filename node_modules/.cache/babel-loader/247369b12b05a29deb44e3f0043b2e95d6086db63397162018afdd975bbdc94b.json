{"ast":null,"code":"export const sendTimesheetEmail = async (employeeName, weekNumber, attendanceDetails) => {\n  try {\n    // You'll need to replace this with your actual email service endpoint\n    const response = await fetch('/api/send-email', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        to: 'user@example.com',\n        // Replace with actual user email\n        subject: `Timesheet Submission - Week ${weekNumber}`,\n        body: `\n          Timesheet submitted by: ${employeeName}\n          Week: ${weekNumber}\n          \n          Details:\n          ${JSON.stringify(attendanceDetails, null, 2)}\n        `\n      })\n    });\n    return response.ok;\n  } catch (error) {\n    console.error('Failed to send email:', error);\n    return false;\n  }\n};","map":{"version":3,"names":["sendTimesheetEmail","employeeName","weekNumber","attendanceDetails","response","fetch","method","headers","body","JSON","stringify","to","subject","ok","error","console"],"sources":["C:/Users/kd1812/Desktop/tarastimesheetportal/src/utils/emailService.js"],"sourcesContent":["export const sendTimesheetEmail = async (employeeName, weekNumber, attendanceDetails) => {\r\n  try {\r\n    // You'll need to replace this with your actual email service endpoint\r\n    const response = await fetch('/api/send-email', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        to: 'user@example.com', // Replace with actual user email\r\n        subject: `Timesheet Submission - Week ${weekNumber}`,\r\n        body: `\r\n          Timesheet submitted by: ${employeeName}\r\n          Week: ${weekNumber}\r\n          \r\n          Details:\r\n          ${JSON.stringify(attendanceDetails, null, 2)}\r\n        `\r\n      }),\r\n    });\r\n\r\n    return response.ok;\r\n  } catch (error) {\r\n    console.error('Failed to send email:', error);\r\n    return false;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAG,MAAAA,CAAOC,YAAY,EAAEC,UAAU,EAAEC,iBAAiB,KAAK;EACvF,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;MAC9CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,EAAE,EAAE,kBAAkB;QAAE;QACxBC,OAAO,EAAE,+BAA+BV,UAAU,EAAE;QACpDM,IAAI,EAAE;AACd,oCAAoCP,YAAY;AAChD,kBAAkBC,UAAU;AAC5B;AACA;AACA,YAAYO,IAAI,CAACC,SAAS,CAACP,iBAAiB,EAAE,IAAI,EAAE,CAAC,CAAC;AACtD;MACM,CAAC;IACH,CAAC,CAAC;IAEF,OAAOC,QAAQ,CAACS,EAAE;EACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,OAAO,KAAK;EACd;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}